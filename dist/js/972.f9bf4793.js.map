{"version":3,"file":"js/972.f9bf4793.js","mappings":"ykBA4PA,MAAMA,GAAOC,EAAAA,EAAAA,IAAI,IACXC,GAAcD,EAAAA,EAAAA,IAAI,GAClBE,GAAWF,EAAAA,EAAAA,IAAI,IAGfG,GAAgBC,EAAAA,EAAAA,KAAS,KAC7B,MAAMC,GAASJ,EAAYK,MAAQ,GAAKJ,EAASI,MACjD,OAAOP,EAAKO,MAAMC,MAAMF,EAAOA,EAAQH,EAASI,MAAM,IAGlDE,EAAuBC,IAC3BR,EAAYK,MAAQG,CAAI,EAGpBC,EAAwBC,IAC5BT,EAASI,MAAQK,EACjBV,EAAYK,MAAQ,CAAC,EAGjBM,EAAYC,UAChB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,4BAA6B,CAC5DC,iBAAiB,EACjBC,QAAS,MAEPJ,EAASK,MACXC,QAAQC,IAAI,UAAWP,EAASK,MAChCpB,EAAKO,MAAQQ,EAASK,MAEtBC,QAAQE,MAAM,QAElB,CAAE,MAAOA,GACPF,QAAQE,MAAM,YAAaA,EAAMC,QACnC,GAIIC,EAAiBA,KACrB,MAAMC,EAAU,mBAChB,IAAIC,EAAQ,IACZ,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,GAASD,EAAQG,KAAKC,MAAsB,GAAhBD,KAAKE,WAEnC,OAAOJ,CAAK,E,OAIdK,EAAAA,EAAAA,IAAUnB,G,80BCrSV,MAAMoB,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://communityproject/./src/components/User/Information/JobComponent.vue","webpack://communityproject/./src/components/User/Information/JobComponent.vue?37be"],"sourcesContent":["<!-- <template>\r\n  <div class=\"job-listing\">\r\n    <h1>招聘职位</h1>\r\n    <div class=\"job-card\" v-for=\"(job, index) in jobs\" :key=\"index\">\r\n      <h2>{{ job.type }}</h2>\r\n      <p><strong>描述：</strong>{{ job.content }}</p>\r\n      <p><strong>作者：</strong>{{ job.author }}</p>\r\n      <p><strong>电话：</strong>{{ job.phone }}</p>\r\n      <p><strong>微信：</strong>{{ job.wechat }}</p>\r\n      <p><strong>发布日期：</strong>{{ job.date }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      jobs: [], // 初始化为空数组\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchJobs(); // 组件创建时获取职位数据\r\n  },\r\n  methods: {\r\n  async fetchJobs() {\r\n    try {\r\n      const response = await axios.get('http://localhost:8090/job', {\r\n        withCredentials: true,\r\n        timeout: 10000\r\n      });\r\n     //const response = await axios.get('http://localhost:8090/job');\r\n      if (response.data) {\r\n        console.log('获取到的数据:', response.data);\r\n        this.jobs = response.data;\r\n      } else {\r\n        console.error('响应体为空');\r\n      }\r\n    } catch (error) {\r\n      console.error('获取职位数据失败:', error.message);\r\n\r\n      // 检查响应对象是否存在\r\n      if (error.response) {\r\n        console.log('响应完整数据:', error.response);\r\n        console.log('响应状态码:', error.response.status);\r\n        console.log('响应头:', error.response.headers);\r\n      } else if (error.request) {\r\n        // 请求已发出，但没有收到响应\r\n        console.log('请求已发出，但未收到响应:', error.request);\r\n      } else {\r\n        // 设置请求时发生的其他错误\r\n        console.log('请求设置时发生错误:', error.message);\r\n      }\r\n\r\n      console.log('错误配置:', error.config);\r\n    }\r\n  }\r\n}\r\n\r\n};\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.job-listing {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\n.job-card {\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  padding: 15px;\r\n  margin: 10px 0;\r\n  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.job-card h2 {\r\n  margin: 0 0 10px;\r\n}\r\n\r\n.job-card button {\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 15px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.job-card button:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style> -->\r\n\r\n<!-- <template>\r\n  <div>\r\n    <el-input v-model=\"search\" placeholder=\"请输入搜索关键字\" style=\"margin-bottom: 10px;\" />\r\n    <el-table :data=\"paginatedJobs\" style=\"width: 100%\">\r\n      <el-table-column label=\"职位类型\" prop=\"type\" />\r\n      <el-table-column label=\"描述\" prop=\"content\" />\r\n      <el-table-column label=\"作者\" prop=\"author\" />\r\n      <el-table-column label=\"电话\" prop=\"phone\" />\r\n      <el-table-column label=\"微信\" prop=\"wechat\" />\r\n      <el-table-column label=\"发布日期\" prop=\"date\" />\r\n      <el-table-column label=\"操作\">\r\n        <template #default=\"{ row }\">\r\n          <el-button type=\"primary\" size=\"mini\" @click=\"applyForJob(row)\">申请</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <el-pagination\r\n      @current-change=\"handleCurrentChange\"\r\n      @size-change=\"handlePageSizeChange\"\r\n      :current-page=\"currentPage\"\r\n      :page-sizes=\"[5, 10, 20]\"\r\n      :page-size=\"pageSize\"\r\n      :total=\"filteredJobs.length\"\r\n      layout=\"total, sizes, prev, pager, next, jumper\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport axios from 'axios';\r\nimport { computed, onMounted, ref } from 'vue';\r\n\r\nconst jobs = ref([]);\r\nconst search = ref('');\r\nconst currentPage = ref(1);\r\nconst pageSize = ref(10); // 每页展示10条数据\r\n\r\n// 计算符合搜索条件的数据\r\nconst filteredJobs = computed(() => {\r\n  const searchTerm = search.value.trim().toLowerCase();\r\n  if (!searchTerm) return jobs.value;\r\n  return jobs.value.filter(job => job.type.toLowerCase().includes(searchTerm));\r\n});\r\n\r\n// 计算当前页显示的数据\r\nconst paginatedJobs = computed(() => {\r\n  const start = (currentPage.value - 1) * pageSize.value;\r\n  return filteredJobs.value.slice(start, start + pageSize.value);\r\n});\r\n\r\n// 更新当前页码\r\nconst handleCurrentChange = (page) => {\r\n  currentPage.value = page;\r\n};\r\n\r\n// 处理每页显示条数变化\r\nconst handlePageSizeChange = (size) => {\r\n  pageSize.value = size;\r\n  currentPage.value = 1; // 重置为第一页\r\n};\r\n\r\nconst fetchJobs = async () => {\r\n  try {\r\n    const response = await axios.get('http://localhost:8090/job', {\r\n      withCredentials: true,\r\n      timeout: 10000\r\n    });\r\n    if (response.data) {\r\n      console.log('获取到的数据:', response.data);\r\n      jobs.value = response.data;\r\n    } else {\r\n      console.error('响应体为空');\r\n    }\r\n  } catch (error) {\r\n    console.error('获取职位数据失败:', error.message);\r\n  }\r\n};\r\n\r\nconst applyForJob = (job) => {\r\n  alert(`申请职位: ${job.type}`);\r\n};\r\n\r\n// 页面加载时获取职位数据\r\nonMounted(fetchJobs);\r\n</script>\r\n\r\n<style scoped>\r\n.job-listing {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\n.el-table {\r\n  width: 100%;\r\n}\r\n\r\n.el-table th, .el-table td {\r\n  text-align: center; /* 文本居中 */\r\n}\r\n\r\n/* 鼠标悬停时的行样式 */\r\n.el-table tr:hover {\r\n  background-color: #f5f5f5; /* 鼠标悬停时的背景色 */\r\n}\r\n\r\n/* 操作按钮样式 */\r\n.el-button {\r\n  margin-right: 5px; /* 按钮间距 */\r\n}\r\n\r\n/* 输入框样式 */\r\n.el-input {\r\n  width: 200px; /* 输入框宽度 */\r\n}\r\n</style> -->\r\n\r\n<template>\r\n  <div class=\"job-listing\">\r\n    <div class=\"card-container\">\r\n      <div \r\n        v-for=\"job in paginatedJobs\" \r\n        :key=\"job.id\" \r\n        class=\"job-card\" \r\n        :style=\"{ backgroundColor: getRandomColor() }\"\r\n      >\r\n        <h3>{{ job.type }}</h3>\r\n        <p><strong>描述:</strong> {{ job.content }}</p>\r\n        <p><strong>作者:</strong> {{ job.author }}</p>\r\n        <p><strong>电话:</strong> {{ job.phone }}</p>\r\n        <p><strong>微信:</strong> {{ job.wechat }}</p>\r\n        <p><strong>发布日期:</strong> {{ job.date }}</p>\r\n      </div>\r\n    </div>\r\n    <el-pagination\r\n      @current-change=\"handleCurrentChange\"\r\n      @size-change=\"handlePageSizeChange\"\r\n      :current-page=\"currentPage\"\r\n      :page-sizes=\"[5, 10, 20]\"\r\n      :page-size=\"pageSize\"\r\n      :total=\"jobs.length\"\r\n      layout=\"total, sizes, prev, pager, next, jumper\"\r\n      class=\"pagination\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport axios from 'axios';\r\nimport { computed, onMounted, ref } from 'vue';\r\n\r\nconst jobs = ref([]);\r\nconst currentPage = ref(1);\r\nconst pageSize = ref(10); // 每页展示10条数据\r\n\r\n// 计算当前页显示的数据\r\nconst paginatedJobs = computed(() => {\r\n  const start = (currentPage.value - 1) * pageSize.value;\r\n  return jobs.value.slice(start, start + pageSize.value);\r\n});\r\n\r\nconst handleCurrentChange = (page) => {\r\n  currentPage.value = page;\r\n};\r\n\r\nconst handlePageSizeChange = (size) => {\r\n  pageSize.value = size;\r\n  currentPage.value = 1; // 重置为第一页\r\n};\r\n\r\nconst fetchJobs = async () => {\r\n  try {\r\n    const response = await axios.get('http://localhost:8090/job', {\r\n      withCredentials: true,\r\n      timeout: 10000\r\n    });\r\n    if (response.data) {\r\n      console.log('获取到的数据:', response.data);\r\n      jobs.value = response.data;\r\n    } else {\r\n      console.error('响应体为空');\r\n    }\r\n  } catch (error) {\r\n    console.error('获取职位数据失败:', error.message);\r\n  }\r\n};\r\n\r\n// 随机生成颜色\r\nconst getRandomColor = () => {\r\n  const letters = '0123456789ABCDEF';\r\n  let color = '#';\r\n  for (let i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n};\r\n\r\n// 页面加载时获取职位数据\r\nonMounted(fetchJobs);\r\n</script>\r\n\r\n<style scoped>\r\nhtml, body {\r\n  height: 100%;\r\n  margin: 0;\r\n}\r\n\r\n.job-listing {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh; /* 使容器高度为视口高度 */\r\n  padding: 20px;\r\n  font-family: 'Comic Sans MS', cursive, sans-serif; /* 奇葩字体 */\r\n  background: linear-gradient(135deg, #ff6f61, #6a5acd); /* 鲜艳的背景 */\r\n  position: relative; /* 为了定位分页 */\r\n}\r\n\r\n.card-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  gap: 20px;\r\n  width: 100%; /* 使卡片容器宽度为100% */\r\n  max-width: 800px; /* 限制最大宽度 */\r\n}\r\n\r\n.job-card {\r\n  border: 3px dotted #fff; /* 虚线边框 */\r\n  border-radius: 20px; /* 圆角 */\r\n  padding: 20px;\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.5);\r\n  transition: transform 0.3s, box-shadow 0.3s;\r\n  color: #fff; /* 字体颜色为白色，适合多种背景 */\r\n  position: relative; /* 为了定位伪元素 */\r\n  overflow: hidden; /* 隐藏溢出内容 */\r\n}\r\n\r\n.job-card:hover {\r\n  transform: scale(1.1) rotate(5deg); /* 鼠标悬停时放大和旋转 */\r\n  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.8);\r\n}\r\n\r\n.job-card h3 {\r\n  margin: 0 0 10px;\r\n  text-shadow: 1px 1px 2px #000; /* 文字阴影效果 */\r\n}\r\n\r\n.job-card p {\r\n  margin: 5px 0;\r\n}\r\n\r\n/* 分页样式 */\r\n.pagination {\r\n  position: absolute; /* 固定位置 */\r\n  bottom: 20px; /* 距离底部20px */\r\n  right: 20px; /* 距离左侧20px */\r\n  background: rgba(255, 255, 255, 0.8); /* 半透明背景 */\r\n  border-radius: 10px; /* 圆角 */\r\n  padding: 10px; /* 内边距 */\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);\r\n}\r\n</style>\r\n\r\n","import script from \"./JobComponent.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./JobComponent.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./JobComponent.vue?vue&type=style&index=0&id=8e12ae4e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-8e12ae4e\"]])\n\nexport default __exports__"],"names":["jobs","ref","currentPage","pageSize","paginatedJobs","computed","start","value","slice","handleCurrentChange","page","handlePageSizeChange","size","fetchJobs","async","response","axios","get","withCredentials","timeout","data","console","log","error","message","getRandomColor","letters","color","i","Math","floor","random","onMounted","__exports__"],"sourceRoot":""}